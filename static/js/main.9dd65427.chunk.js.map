{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["slider","src","val","experience","PersonIncrementor","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","className","onClick","handleIncrement","numOfPeople","React","Component","Bill","Form","Row","Col","Label","InputGroup","Prepend","Text","FormControl","arai-label","value","bill","onChange","handleChange","App_PersonIncrementor","ServiceQuality","_this2","Carousel","map","e","Item","key","id","alt","Caption","Radio","aria-label","name","service","for","TipIncrementor","_this3","tip","Result","ITWithoutTip","Math","round","ITWithTip","tipTotal","tipPerPerson","Container","App","_this4","state","bind","assertThisInitialized","event","setState","target","count","prevState","defineProperty","App_Bill","App_ServiceQuality","App_TipIncrementor","App_Result","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9dd65427.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { Container, Form, InputGroup, FormControl, Row, Col, Carousel } from 'react-bootstrap';\r\n\r\nconst slider = [\r\n      {\r\n        \"src\": \"https://cdn.pixabay.com/photo/2012/03/01/00/57/background-19861_1280.jpg\",\r\n        \"val\": 35,\r\n        \"experience\": \"Excellent\"\r\n      },\r\n          {\r\n        \"src\": \"https://images.unsplash.com/photo-1533035336122-4327d347d2fe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\",\r\n        \"val\": 25,\r\n        \"experience\": \"Good\"\r\n      },\r\n          {\r\n        \"src\": \"https://cdn.pixabay.com/photo/2012/12/24/08/39/backdrop-72250_1280.jpg\",\r\n        \"val\": 15,\r\n        \"experience\": \"Fair\"\r\n      },\r\n          {\r\n        \"src\": \"https://images.unsplash.com/photo-1538635546732-684a9ec39ea5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1070&q=80\",\r\n        \"val\": 5,\r\n        \"experience\": \"Poor\"\r\n      }\r\n    ];\r\n\r\nclass PersonIncrementor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"incrementor\">\r\n      <i className=\"fas fa-user-times\" onClick={()=> this.props.handleIncrement('numOfPeople', -1)}></i>&nbsp;&nbsp;\r\n<span>{this.props.numOfPeople}</span>&nbsp;&nbsp;\r\n<i className=\"fas fa-user-plus\" onClick={()=> this.props.handleIncrement('numOfPeople', 1)}></i></div>\r\n  );\r\n}\r\n}\r\n\r\n\r\nconst Bill = (props) => {\r\n  return (\r\n    <div className=\"bill\">\r\n    <Form>\r\n    <Row>\r\n    <Col><Form.Label>Bill</Form.Label></Col>\r\n    <Col>\r\n    <p>Number of people</p>\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n    <Col>\r\n    <InputGroup className=\"input1\">\r\n    <InputGroup.Prepend>\r\n    <InputGroup.Text>$</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl arai-label=\"Amount (to the nearest two decimal places)\" value={props.bill} onChange={props.handleChange}/>\r\n    </InputGroup>\r\n    </Col>\r\n    <Col>\r\n    <PersonIncrementor numOfPeople={props.numOfPeople} handleIncrement={props.handleIncrement}/>\r\n    </Col>\r\n    </Row>\r\n    </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass ServiceQuality extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Carousel>\r\n      {slider.map(e => (\r\n      <Carousel.Item key={e.id}>\r\n            <img src={e.src} alt=\"slider background image\"  /> \r\n          <Carousel.Caption>\r\n      <InputGroup>\r\n      <InputGroup.Prepend>\r\n      &nbsp;&nbsp;\r\n      \r\n<InputGroup.Radio aria-label=\"radio button for following h3 text\" id={e.experience} value={e.experience} name=\"experience\" onClick={() => this.props.service('tip', e.val)}/>\r\n      </InputGroup.Prepend> &nbsp;&nbsp;\r\n<label for={e.experience}>{e.experience}</label>\r\n      </InputGroup>\r\n      \r\n</Carousel.Caption>\r\n</Carousel.Item>\r\n      ))}\r\n      </Carousel>\r\n);\r\n}\r\n};\r\n\r\n\r\nclass TipIncrementor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"incrementor\">\r\n      <i className=\"fas fa-minus-square\" onClick={() => this.props.handleIncrement('tip', -1)}></i>&nbsp;&nbsp;\r\n<span>{this.props.tip}</span>&nbsp;&nbsp;\r\n<i className=\"fas fa-plus-square\" onClick={()=> this.props.handleIncrement('tip', 1)}></i>\r\n</div>\r\n);\r\n}\r\n};\r\n\r\n\r\nconst Result = (props) => {\r\n  const ITWithoutTip = Math.round((props.bill/props.numOfPeople)*100)/100;\r\n  const ITWithTip = Math.round((ITWithoutTip + (props.tip/100 * props.bill/props.numOfPeople)) * 100)/100;\r\n  const tipTotal = Math.round((ITWithTip -ITWithoutTip) * props.numOfPeople *100)/100;\r\n  const tipPerPerson = Math.round(tipTotal / props.numOfPeople * 100)/100;\r\n\r\n  return (\r\n    <div id=\"result\">\r\n    <Container>\r\n    <Row>\r\n    <Col>Individual total without tip:</Col>\r\n    <Col className=\"num\">{ITWithoutTip}</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n    <Col>Individual total with tip:</Col>\r\n    <Col className=\"num\">{ITWithTip}</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n    <Col>Total tip amount:</Col>\r\n    <Col className=\"num\">{tipTotal}</Col>\r\n    </Row>\r\n    </Container><br />\r\n\r\n    <div id=\"tip-per-person\">\r\n    <Container>\r\n    <Row>\r\n    <Col className=\"tip-per-person-text\">Tip per person:</Col>\r\n    <Col className=\"num\">{tipPerPerson}</Col>\r\n    </Row>\r\n    </Container>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bill: 112.58,\r\n      tip: 20,\r\n      numOfPeople: 2\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleIncrement = this.handleIncrement.bind(this);\r\n    this.service = this.service.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      bill: event.target.value\r\n    })\r\n  }\r\n\r\n  handleIncrement(count, value) {\r\n    this.setState(prevState => {\r\n      if(prevState[count] > 1 || value === 1) {\r\n        return ({\r\n          [count]: prevState[count] + value\r\n        });\r\n      } else {\r\n        return ({\r\n          [count]: 20\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  service(name, value) {\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"container\">\r\n\r\n      <div id=\"header\">\r\n      <Container>\r\n      <h1>Tip Calculator</h1>\r\n      </Container>\r\n      </div>\r\n\r\n      <div id=\"main\">\r\n      <Container>\r\n      <Bill bill={this.state.bill} numOfPeople={this.state.numOfPeople} handleChange={this.handleChange} handleIncrement={this.handleIncrement}/>\r\n\r\n\r\n      <div id=\"service\">\r\n      <hr />\r\n      </div>\r\n      <div>\r\n      <Row>\r\n      <Col>\r\n      <Col>\r\n      <p className=\"experience\">How was your experience today?</p>\r\n      </Col>\r\n\r\n      <ServiceQuality service={this.service}/>\r\n\r\n      </Col>\r\n      <Col id=\"tip\">\r\n      <Col><p>Tip %</p></Col><br />\r\n      <Col>\r\n\r\n      <TipIncrementor handleIncrement={this.handleIncrement} tip={this.state.tip} />\r\n\r\n      </Col>\r\n      </Col>\r\n      </Row>\r\n      </div>\r\n      <hr />\r\n      </Container>\r\n\r\n      <Result bill={this.state.bill} numOfPeople={this.state.numOfPeople} tip={this.state.tip} />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}